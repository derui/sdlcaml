#define t_prim CAMLprim value

t_prim sdlcaml_ttf_linked_version(value unit) {
  CAMLparam1(unit);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_compiled_version(value unit) {
  CAMLparam1(unit);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_init(value unit) {
  CAMLparam1(unit);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_was_init(value unit) {
  CAMLparam1(unit);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_quit(value unit) {
  CAMLparam1(unit);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_open_font(value file, value ptsize) {
  CAMLparam2(file, ptsize);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_open_font_index(value file, value ptsize, value index) {
  CAMLparam3(file, ptsize, index);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_close_font(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_byte_swapped(value swapped) {
  CAMLparam1(swapped);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_get_style(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_set_style(value font, value styles) {
  CAMLparam2(font, styles);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_get_outline(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_set_outline(value font, value width) {
  CAMLparam2(font, width);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_get_hinting(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_set_hinting(value font, value hinting) {
  CAMLparam2(font, hinting);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_is_kerning(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_set_kerning(value font, value kerning) {
  CAMLparam2(font, kerning);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_height(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_ascent(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_descent(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_line_skip(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_faces(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_is_fixed_width(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_family_name(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_style_name(value font) {
  CAMLparam1(font);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_glyph_is_provided(value font, value ch) {
  CAMLparam2(font, ch);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_glyph_metrics(value font, value ch) {
  CAMLparam2(font, ch);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_size_utf8(value font, value text) {
  CAMLparam2(font, text);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_render_utf8_solid(value font, value text, value color) {
  CAMLparam3(font, text, color);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_render_utf8_shaded(value font, value text, value fg, value bg) {
  CAMLparam4(font, text, fg, bg);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}

t_prim sdlcaml_ttf_render_utf8_blended(value font, value text, value fg) {
  CAMLparam3(font, text, fg);
  caml_failwith("SDL_ttf is not available");
  CAMLnoreturn;
}
