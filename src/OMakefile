########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# The standard OMakefile.
# You will usually need to modify this file for your project.

################################################
# Configuration.  You may want to modify any of these configuration
# variables.
#
open build/C
open MyUtil

.PHONY: gen all
#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
    core
    typedvec
    ctypes
    ctypes.foreign
#
if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

#
# Include path
#
OCAMLINCLUDES += ../gen/structures ../gen/flags

#
# Compile native or byte code?
#
# The default values are defined as follows:
#
NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    += -annot -bin-annot -g -thread
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS +=
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
# OCamlGeneratedFiles(parser.ml lexer.ml)

################################################
# Build bindings for OCaml to C.
#

# check that can sdl2-config use.
.STATIC:
	USE_GL_VERSION = 0_0
	if $(defined GL_VERSION)
		USE_GL_VERSION = $(GL_VERSION)
		export
	GL_MAJOR_VERSION = $(int $(match $(USE_GL_VERSION), \\\([0-9]+\\\)_\\\([0-9]+\\\), $1))
	GL_MINOR_VERSION = $(int $(match $(USE_GL_VERSION), \\\([0-9]+\\\)_\\\([0-9]+\\\), $2))

	if $(compare $(int 3), $(GL_MAJOR_VERSION)) >= 0
		SDL_CONFIGURE += -DGL3_ENABLE
		CFLAGS += -DGL3_ENABLE
		setenv("GL3_ENABLE", $(EMPTY))
		export

INCLUDES += ../include $(shella $(OCAMLC) -config | grep standard_library: | cut -d' ' -f 2)
CFLAGS += $(SDL_CONFIGURE) -std=c99 -fPIC -g

if $(IsMac)
	CFLAGS += -fnexted-functions

FILES = $(removesuffix $(ls sdl*.ml))
FILES[] +=
	std

# files for building extend libraries are contained to dependencies.
LIBRARY_NAME = sdlcaml

#
# OCAML_LIBS += 
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS +=
OCAML_LIB_FLAGS += -cclib -lsdlcaml

# As gl_enum.h is referenced by already existed .c file,
# need to add generated files by camlidl to adependency for .DEFAULT.

MyOCamlPackage($(LIBRARY_NAME), $(FILES), $(EMPTY), -linkall, true)
TARGETS = $(OCamlPackageGeneratedFiles $(LIBRARY_NAME), false)

all: gen $(TARGETS)

DEFAULT: all
