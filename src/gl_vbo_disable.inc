CAMLprim value gl_api_glBindBuffer(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glBindBuffer can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glUnbindBuffer(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glUnbindBuffer can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glBufferData(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glBufferData can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glBufferSubData(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glBufferSubData can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glGenBuffer(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glGenBuffer can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glGenBuffers(value size) {
  CAMLparam1(size);
  caml_failwith("gl_api_glGenBuffers can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glDeleteBuffers(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glDeleteBuffers can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glGetBufferParameter_access(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glGetBufferParameter_access can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glGetBufferParameter_mapped(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glGetBufferParameter_mapped can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glGetBufferParameter_size(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glGetBufferParameter_size can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glGetBufferParameter_usage(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glGetBufferParameter_usage can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glGetBufferSubData(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glGetBufferSubData can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glIsBuffer(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glIsBuffer can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glCopyBufferSubData(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glCopyBufferSubData can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glFlushMappedBufferRange(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glFlushMappedBufferRange can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}

CAMLprim value gl_api_glTexBuffer(value unit) {
  CAMLparam1(unit);
  caml_failwith("gl_api_glTexBuffer can not use if OpenGL3.* option did not set.");
  CAMLreturn(Val_unit);
}
