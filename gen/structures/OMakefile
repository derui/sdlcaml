.PHONY: gen
#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
  ctypes

#
if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

#
# Include path
#
OCAMLINCLUDES += ../flags

#
# Compile native or byte code?
#
# The default values are defined as follows:
#
NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    += -bin-annot
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS +=
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
# OCamlGeneratedFiles(parser.ml lexer.ml)

################################################
# Build bindings for OCaml to C.
#

FILES[] = $(removesuffix $(ls sdl_structure*.ml))

#
# OCAML_LIBS += -custom
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS += camlidl
# OCAML_LIB_FLAGS += -cclib -lsdlcaml
MAIN=sdlcaml_structures.ml

$(MAIN):
	if $(file-exists $(MAIN))
		unlink $(MAIN)
	foreach(x => ..., $(FILES))
		private.f = $(removeprefix sdl_structure_, $x)
		echo $(string module $(capitalize $f) = $(capitalize $x)) >> $(MAIN)

gen: $(MAIN)

.DEFAULT: gen
