.PHONY: gen clean
#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =

#
if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

#
# Include path
#
OCAMLINCLUDES +=

#
# Compile native or byte code?
#
# The default values are defined as follows:
#
NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    += -bin-annot
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS +=
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
# OCamlGeneratedFiles(parser.ml lexer.ml)

################################################
# Build bindings for OCaml to C.
#

FILES[] =
	version.ml
	audio_cvt.ml
	audio_spec.ml
	color.ml
	color_table.ml
	controller_button_bind.ml
	display_mode.ml
	gamma_ramp.ml
	joystick_guid.ml
	keysym.ml
	palette.ml
	pixel_format.ml
	point.ml
	rect.ml
	renderer_info.ml
	rw_ops.ml
	size.ml
	sys_wm_info.ml
	sys_wm_msg.ml
	events.ml
#
# OCAML_LIBS += -custom
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS += camlidl
# OCAML_LIB_FLAGS += -cclib -lsdlcaml
MAIN=../../src/sdlcaml_structures.ml

$(MAIN): $(FILES)
	if $(file-exists $(MAIN))
		unlink $(MAIN)
	foreach(x => ..., $(FILES))
		echo $(string module $(capitalize $(removesuffix $x)) = struct) >> $(MAIN)
		cat $x >> $(MAIN)
		echo $(string end) >> $(MAIN)

gen: $(MAIN)

clean:
	rm -f $(MAIN)

.DEFAULT: gen
