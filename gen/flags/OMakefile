################################################
# Configuration.  You may want to modify any of these configuration
# variables.
#
open MyUtil

.PHONY: gen
#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
#
if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

#
# Include path
#
# OCAMLINCLUDES += ../lib

#
# Compile native or byte code?
#
# The default values are defined as follows:
#
NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

#
# Various options
#
OCAMLFLAGS    += -bin-annot
# OCAMLCFLAGS   +=
# OCAMLOPTFLAGS += -linkpkg
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Build bindings for OCaml to C.
#
#
# OCAML_LIBS += ../lib/mylib
# OCAML_CLIBS += outputflag
# OCAML_OTHER_LIBS += nums Glut GL bigarray vertArray VBO
# OCAML_LIB_FLAGS +=
# OCAML_PACKAGE_NAME = sdl_flags
#
FILES[] = $(removesuffix $(ls sdl_flag*.ml)) 
MAIN=sdlcaml_flags.ml

gen: $(MAIN)

$(MAIN):
	if $(file-exists $(MAIN))
		unlink $(MAIN)
	foreach(x => ..., $(FILES))
		private.f = $(removeprefix sdl_flag_, $x)
		echo $(string module $(capitalize sdl_$f) = $(capitalize $x)) >> $(MAIN)

.DEFAULT: gen
